---
apiVersion: v1
kind: Namespace
metadata:
  name: unifi
  labels:
    name: unifi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: unifi-data-claim
  namespace: unifi
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: unifi-db-claim
  namespace: unifi
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unifi-db-cm
  namespace: unifi
data:
  init-mongo.js: |
    db.getSiblingDB("unifi").createUser({user: "unifi", pwd: "password", roles: [{role: "dbOwner", db: "unifi"}]});
    db.getSiblingDB("unifi_stat").createUser({user: "unifi", pwd: "password", roles: [{role: "dbOwner", db: "unifi_stat"}]});
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: unifi-controller
  namespace: unifi
spec:
  serviceName: unifi-controller
  replicas: 1
  selector:
    matchLabels:
      app: unifi-controller
  template:
    metadata:
      labels:
        app: unifi-controller
    spec:
      containers:
      - name: unifi-controller
        image: linuxserver/unifi-controller:8.0.24
        env:
        - name: TZ
          value: Etc/UTC
        - name: MONGO_USER
          value: unifi
        - name: MONGO_PASS
          value: password
        - name: MONGO_HOST
          value: localhost
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_DBNAME
          value: unifi
        ports:
        - name: device-comm
          containerPort: 8080
          protocol: TCP
        - name: stun
          containerPort: 3478
          protocol: UDP
        - name: default-console
          containerPort: 8443
          protocol: TCP
        - name: secure-redirect
          containerPort: 8843
          protocol: TCP
        - name: http-redirect
          containerPort: 8880
          protocol: TCP
        - name: speedtest
          containerPort: 6789
          protocol: TCP
        - name: unifi-disc
          containerPort: 10001
          protocol: UDP
        - name: unifi-disc-l2
          containerPort: 1900
          protocol: UDP
        - name: remote-syslog
          containerPort: 5514
          protocol: UDP
        resources:
          requests:
            cpu: "150m"
            memory: "1024Mi"
          limits:
            cpu: "512m"
            memory: "2048Mi"
        volumeMounts:
        - name: unifi-data
          mountPath: /config
      - name: unifi-db
        image: docker.io/mongo:4.4.6
        volumeMounts:
        - name: unifi-db
          mountPath: /data/db
        - name: unifi-db-init
          mountPath: "/docker-entrypoint-initdb.d/init-mongo.js"
          subPath: init-mongo.js
          readOnly: true
      volumes:
      - name: unifi-data
        persistentVolumeClaim:
          claimName: unifi-data-claim
      - name: unifi-db
        persistentVolumeClaim:
          claimName: unifi-db-claim
      - name: unifi-db-init
        configMap:
          name: unifi-db-cm
---
apiVersion: v1
kind: Service
metadata:
  name: unifi-controller
  namespace: unifi
  labels:
    app: unifi-controller
spec:
  type: LoadBalancer
  loadBalancerIP: 192.168.4.42
  selector:
    app: unifi-controller
  ports:
  - name: device-comm
    port: 8080
    protocol: TCP
  - name: stun
    port: 3478
    protocol: UDP
  - name: default-console
    port: 8443
    protocol: TCP
  - name: secure-redirect
    port: 8843
    protocol: TCP
  - name: http-redirect
    port: 8880
    protocol: TCP
  - name: speedtest
    port: 6789
    protocol: TCP
  - name: unifi-disc
    port: 10001
    protocol: UDP
  - name: unifi-disc-l2
    port: 1900
    protocol: UDP
  - name: remote-syslog
    port: 5514
    protocol: UDP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: unifi-dashboard
  namespace: unifi
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`unifi.kevin.tomalias.com`)
      kind: Rule
      services:
        - name: unifi-controller
          port: 8443
          scheme: https
          serversTransport: unifi-ingress-transport
  tls:
   secretName: tomalias-com-tls
---
apiVersion: traefik.containo.us/v1alpha1
kind: ServersTransport
metadata:
  name: unifi-ingress-transport
  namespace: unifi
spec:
  insecureSkipVerify: true